version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./app:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./app:/var/www/html
    networks:
      - app-network

  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: ["postgres", "-c", "log_statement=all"]
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./docker/pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - app-network

  cron:
    build:
      context: .
      dockerfile: docker/cron/Dockerfile
    volumes:
      - ./app:/var/www/html
    depends_on:
      - app
      - db
    env_file:
      - .env
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge